"""empty message

Revision ID: 0681866638cf
Revises: None
Create Date: 2020-03-27 15:55:31.918960

"""

# revision identifiers, used by Alembic.
revision = "0681866638cf"
down_revision = None

from alembic import op
import sqlalchemy as sa
import sqlalchemy_utils
from sqlalchemy.dialects import postgresql


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "groups",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("deleted", sa.Boolean(), nullable=False),
        sa.Column(
            "modified",
            sa.DateTime(timezone=True),
            server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.Column(
            "created",
            sa.DateTime(timezone=True),
            server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.Column("name", sa.String(length=80), nullable=True),
        sa.Column("description", sa.String(length=255), nullable=True),
        sa.Column("pid", sa.Integer(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_table(
        "groups_relation",
        sa.Column("ancestor", sa.Integer(), nullable=False),
        sa.Column("descendant", sa.Integer(), nullable=False),
        sa.Column("distance", sa.Integer(), nullable=False),
    )
    op.create_table(
        "groups_roles",
        sa.Column("group_id", sa.Integer(), nullable=False),
        sa.Column("role_id", sa.Integer(), nullable=False),
    )
    op.create_table(
        "groups_users",
        sa.Column("group_id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
    )
    op.create_table(
        "jwt_token_blacklist",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("deleted", sa.Boolean(), nullable=False),
        sa.Column(
            "modified",
            sa.DateTime(timezone=True),
            server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.Column(
            "created",
            sa.DateTime(timezone=True),
            server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.Column("user_identity", sa.String(length=50), nullable=False),
        sa.Column("jti", sa.String(length=36), nullable=False),
        sa.Column("revoked", sa.Boolean(), nullable=False),
        sa.Column("token_type", sa.String(length=10), nullable=False),
        sa.Column("expires", sa.DateTime(timezone=True), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("jti"),
    )
    op.create_table(
        "permission_roles",
        sa.Column("permission_id", sa.Integer(), nullable=False),
        sa.Column("role_id", sa.Integer(), nullable=False),
    )
    op.create_table(
        "permissions",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("deleted", sa.Boolean(), nullable=False),
        sa.Column(
            "modified",
            sa.DateTime(timezone=True),
            server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.Column(
            "created",
            sa.DateTime(timezone=True),
            server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.Column("name", sa.String(length=80), nullable=True),
        sa.Column("description", sa.String(length=255), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_table(
        "roles",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("deleted", sa.Boolean(), nullable=False),
        sa.Column(
            "modified",
            sa.DateTime(timezone=True),
            server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.Column(
            "created",
            sa.DateTime(timezone=True),
            server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.Column("name", sa.String(length=80), nullable=True),
        sa.Column("description", sa.String(length=255), nullable=True),
        sa.Column("user_default", sa.Boolean(), nullable=True),
        sa.Column("group_default", sa.Boolean(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_table(
        "roles_users",
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("role_id", sa.Integer(), nullable=False),
    )
    op.create_table(
        "userinfo",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("deleted", sa.Boolean(), nullable=False),
        sa.Column(
            "modified",
            sa.DateTime(timezone=True),
            server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.Column(
            "created",
            sa.DateTime(timezone=True),
            server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.Column("avator_id", sa.Integer(), nullable=True),
        sa.Column("uid", sa.Integer(), nullable=True),
        sa.Column("sex", sa.Integer(), nullable=True),
        sa.Column("age", sa.Integer(), nullable=True),
        sa.Column("first_name", sa.String(length=80), nullable=True),
        sa.Column("last_name", sa.String(length=80), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "users",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("deleted", sa.Boolean(), nullable=False),
        sa.Column(
            "modified",
            sa.DateTime(timezone=True),
            server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.Column(
            "created",
            sa.DateTime(timezone=True),
            server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.Column("username", sa.String(length=255), nullable=False),
        sa.Column("phonenum", sa.String(length=255), nullable=True),
        sa.Column("email", sa.String(length=255), nullable=False),
        sa.Column(
            "password", sqlalchemy_utils.types.password.PasswordType(), nullable=False
        ),
        sa.Column("active", sa.Boolean(), nullable=True),
        sa.Column("confirmed_at", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("email"),
        sa.UniqueConstraint("phonenum"),
        sa.UniqueConstraint("username"),
    )
    op.drop_table("projects")
    op.drop_table("menus")
    op.drop_table("project_details")
    op.drop_table("storages")
    op.drop_table("project_statistic")
    op.drop_table("email_templates")
    op.drop_table("menus_relation")
    op.drop_table("todolist_items")
    op.drop_table("garbage_storages")
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "garbage_storages",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("deleted", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "modified",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "created",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("path", sa.VARCHAR(length=2000), autoincrement=False, nullable=True),
        sa.Column(
            "storetype", sa.VARCHAR(length=256), autoincrement=False, nullable=True
        ),
        sa.Column("storage_id", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("id", name="garbage_storages_pkey"),
    )
    op.create_table(
        "todolist_items",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("deleted", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "modified",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "created",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("message", sa.VARCHAR(length=60), autoincrement=False, nullable=True),
        sa.Column("due", postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
        sa.Column("sort", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("state", sa.BOOLEAN(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("id", name="todolist_items_pkey"),
    )
    op.create_table(
        "menus_relation",
        sa.Column("ancestor", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("descendant", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("distance", sa.INTEGER(), autoincrement=False, nullable=False),
    )
    op.create_table(
        "email_templates",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("deleted", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "modified",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "created",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("name", sa.VARCHAR(length=128), autoincrement=False, nullable=False),
        sa.Column("template", sa.TEXT(), autoincrement=False, nullable=False),
        sa.PrimaryKeyConstraint("id", name="email_templates_pkey"),
        sa.UniqueConstraint("name", name="email_templates_name_key"),
    )
    op.create_table(
        "project_statistic",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("deleted", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "modified",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "created",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("name", sa.VARCHAR(length=128), autoincrement=False, nullable=False),
        sa.Column(
            "user_name", sa.VARCHAR(length=128), autoincrement=False, nullable=False
        ),
        sa.Column(
            "amount",
            sa.NUMERIC(precision=20, scale=2),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("code", sa.VARCHAR(length=10), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("id", name="project_statistic_pkey"),
        sa.UniqueConstraint("user_name", "code", name="statistic_unique"),
    )
    op.create_table(
        "storages",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("deleted", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "modified",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "created",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("name", sa.VARCHAR(length=256), autoincrement=False, nullable=True),
        sa.Column(
            "filetype", sa.VARCHAR(length=256), autoincrement=False, nullable=True
        ),
        sa.Column(
            "storetype", sa.VARCHAR(length=256), autoincrement=False, nullable=True
        ),
        sa.Column("date", sa.DATE(), autoincrement=False, nullable=True),
        sa.Column("saved", sa.BOOLEAN(), autoincrement=False, nullable=True),
        sa.Column("path", sa.VARCHAR(length=2000), autoincrement=False, nullable=True),
        sa.Column("uid", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("id", name="storages_pkey"),
    )
    op.create_table(
        "project_details",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("deleted", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "modified",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "created",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("name", sa.VARCHAR(length=128), autoincrement=False, nullable=False),
        sa.Column(
            "user_name", sa.VARCHAR(length=128), autoincrement=False, nullable=False
        ),
        sa.Column("date", sa.DATE(), autoincrement=False, nullable=True),
        sa.Column(
            "amount",
            sa.NUMERIC(precision=20, scale=2),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("code", sa.VARCHAR(length=10), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("id", name="project_details_pkey"),
        sa.UniqueConstraint("user_name", "created", name="detail_unique"),
    )
    op.create_table(
        "menus",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("deleted", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "modified",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "created",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("name", sa.VARCHAR(length=80), autoincrement=False, nullable=True),
        sa.Column(
            "description", sa.VARCHAR(length=255), autoincrement=False, nullable=True
        ),
        sa.Column("pid", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("permission_id", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("icon", sa.VARCHAR(length=512), autoincrement=False, nullable=True),
        sa.Column("path", sa.VARCHAR(length=512), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("id", name="menus_pkey"),
        sa.UniqueConstraint("name", name="menus_name_key"),
    )
    op.create_table(
        "projects",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("deleted", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "modified",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "created",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("code", sa.VARCHAR(length=10), autoincrement=False, nullable=False),
        sa.Column("name", sa.VARCHAR(length=128), autoincrement=False, nullable=False),
        sa.Column(
            "collected_amount",
            sa.NUMERIC(precision=20, scale=2),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "amount",
            sa.NUMERIC(precision=20, scale=2),
            autoincrement=False,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id", name="projects_pkey"),
    )
    op.drop_table("users")
    op.drop_table("userinfo")
    op.drop_table("roles_users")
    op.drop_table("roles")
    op.drop_table("permissions")
    op.drop_table("permission_roles")
    op.drop_table("jwt_token_blacklist")
    op.drop_table("groups_users")
    op.drop_table("groups_roles")
    op.drop_table("groups_relation")
    op.drop_table("groups")
    # ### end Alembic commands ###
